{"version":3,"sources":["GachaTool.js","App.js","HomePage.js","serviceWorker.js","index.js"],"names":["bionomial_cdf","X","N","P","LogGamma","Z","S","Math","log","Betinc","A","B","C9","A0","B0","A1","B1","M9","A2","abs","bincdf","BT","floor","exp","calc_gacha_value","n","rewards","value","name","hasOwnProperty","r","calc_spark_value","vals","v","push","sort","a","b","prob","forEach","x","fail","useInput","initialValue","useState","setValue","reset","bind","onChange","event","target","NameInputDialog","description","title","open","handleCancel","handleConfirm","bindName","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","DialogActions","Button","onClick","color","RewardTable","setRewards","headers","raddN","bindRaddN","resetRaddN","raddP","bindRaddP","resetRaddP","raddV","bindRaddV","resetRaddV","handleSwitch","e","val","checked","rewardList","TableRow","key","TableCell","padding","Switch","variant","newVal","removeReward","TableContainer","component","Paper","Table","aria-label","TableHead","disabled","map","h","align","TableBody","size","required","preventDefault","Number","RefValueTable","pulls","defaultRefValues","localStorage","getItem","setItem","JSON","stringify","parse","refValues","setRefValues","React","setOpen","refValueName","bindRefValueName","selectedRefValue","setSelectedRefValue","pullsToSpark","valueSpark","value10","refValueRows","rv","style","background","round","filter","removeRefValue","GachaTool","setTitle","bindPulls","spark_value","useEffect","Grid","container","spacing","item","xs","md","lg","localProfiles","profiles","setProfiles","defaultSelected","pname","profileName","bindProfileName","resetProfileName","profile","bindProfile","profileList","MenuItem","select","newProfiles","ProfileSelect","Typography","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","App","classes","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","max","Drawer","Divider","List","ListItem","RouterLink","to","ListItemIcon","ListItemText","primary","Container","maxWidth","path","exact","HomePage","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0826b70.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// Credit: https://www.math.ucla.edu/~tom/distributions/binomial.html\r\nfunction bionomial_cdf(X, N, P) {\r\n    function LogGamma(Z) {\r\n        let S = 1 + 76.18009173 / Z - 86.50532033 / (Z + 1) + 24.01409822 / (Z + 2) - 1.231739516 / (Z + 3) + .00120858003 / (Z + 4) - .00000536382 / (Z + 5);\r\n        let LG = (Z - .5) * Math.log(Z + 4.5) - (Z + 4.5) + Math.log(S * 2.50662827465);\r\n        return LG;\r\n    }\r\n\r\n    function Betinc(X, A, B) {\r\n        let A0 = 0;\r\n        let B0 = 1;\r\n        let A1 = 1;\r\n        let B1 = 1;\r\n        let M9 = 0;\r\n        let A2 = 0;\r\n        let C9;\r\n        while (Math.abs((A1 - A2) / A1) > .00001) {\r\n            A2 = A1;\r\n            C9 = -(A + M9) * (A + B + M9) * X / (A + 2 * M9) / (A + 2 * M9 + 1);\r\n            A0 = A1 + C9 * A0;\r\n            B0 = B1 + C9 * B0;\r\n            M9 = M9 + 1;\r\n            C9 = M9 * (B - M9) * X / (A + 2 * M9 - 1) / (A + 2 * M9);\r\n            A1 = A0 + C9 * A1;\r\n            B1 = B0 + C9 * B1;\r\n            A0 = A0 / B1;\r\n            B0 = B0 / B1;\r\n            A1 = A1 / B1;\r\n            B1 = 1;\r\n        }\r\n        return A1 / A;\r\n    }\r\n\r\n    let bincdf;\r\n    let Z, A, B, S, BT, Betacdf;\r\n    if (N <= 0) {\r\n        return 0;\r\n    } else if ((P < 0) || (P > 1)) {\r\n        return 0;\r\n    } else if (X < 0) {\r\n        bincdf = 0\r\n    } else if (X >= N) {\r\n        bincdf = 1\r\n    } else {\r\n        X = Math.floor(X);\r\n        Z = P;\r\n        A = X + 1;\r\n        B = N - X;\r\n        S = A + B;\r\n        BT = Math.exp(LogGamma(S) - LogGamma(B) - LogGamma(A) + A * Math.log(Z) + B * Math.log(1 - Z));\r\n        if (Z < (A + 1) / (S + 2)) {\r\n            Betacdf = BT * Betinc(Z, A, B)\r\n        } else {\r\n            Betacdf = 1 - BT * Betinc(1 - Z, B, A)\r\n        }\r\n        bincdf = 1 - Betacdf;\r\n    }\r\n    return bincdf;\r\n}\r\n\r\n// restrictions: sum of probability <=1\r\n// m: reward array, [reward, probability, value], sum(probability)<=1\r\n// b: bonus array, [tries, value]\r\n// n: num of tries\r\n// c: cost of each try\r\n// returns: value / cost\r\nfunction calc_gacha_value(n, rewards) {\r\n    let value = 0;\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        let r = rewards[name];\r\n        // Disabled reward\r\n        if (r[2] === false) continue;\r\n        let prob_get = 1 - bionomial_cdf(0, n, r[0]);\r\n        value += prob_get * r[1];\r\n    }\r\n    return value;\r\n}\r\n\r\n\r\nfunction calc_spark_value(n, rewards) {\r\n    let vals = [];\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        let v = rewards[name];\r\n        vals.push([(v[2] ? v[1] : 0), v[0]]);\r\n    }\r\n    vals.sort((a, b) => b[0] - a[0]);\r\n    let value = 0;\r\n    let prob = 1;\r\n    vals.forEach(x => {\r\n        let fail = bionomial_cdf(0, n, x[1]);\r\n        value += prob * fail * x[0];\r\n        prob *= (1-fail);\r\n    });\r\n    return value;\r\n}\r\n\r\nconst useInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n    return {\r\n        value,\r\n        setValue,\r\n        reset: () => setValue(\"\"),\r\n        bind: {\r\n            value,\r\n            onChange: event => {\r\n                setValue(event.target.value);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nfunction NameInputDialog(description,title,open,handleCancel,handleConfirm,bindName){\r\n    return(\r\n    <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Save Profile</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>\r\n                {description}\r\n            </DialogContentText>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"profileName\"\r\n                label=\"Profile Name\"\r\n                fullWidth\r\n                {...bindName}\r\n            />\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleConfirm} color=\"primary\">\r\n                Confirm\r\n            </Button>\r\n        </DialogActions>\r\n    </Dialog>);\r\n}\r\n\r\nfunction RewardTable(rewards, setRewards, headers) {\r\n    const {value: raddN, bind: bindRaddN, reset: resetRaddN} = useInput('');\r\n    const {value: raddP, bind: bindRaddP, reset: resetRaddP} = useInput('');\r\n    const {value: raddV, bind: bindRaddV, reset: resetRaddV} = useInput('');\r\n    const addReward = (e) => {\r\n        e.preventDefault();\r\n        setRewards({...rewards, [raddN]: [Number(raddP), Number(raddV), true]});\r\n        resetRaddN();\r\n        resetRaddP();\r\n        resetRaddV();\r\n    };\r\n    const handleSwitch = (e) => {\r\n        const name = e.target.name;\r\n        let val = [...rewards[name]];\r\n        val[2] = e.target.checked;\r\n        setRewards({...rewards, [name]: val});\r\n    };\r\n    const removeReward = (name) => {\r\n        let newVal = {...rewards};\r\n        delete newVal[name];\r\n        setRewards(newVal);\r\n    };\r\n    let rewardList = [];\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        rewardList.push(\r\n            <TableRow key={name}>\r\n                <TableCell padding=\"none\">\r\n                    <Switch color=\"primary\" checked={rewards[name][2]} name={name} onChange={handleSwitch}/>\r\n                </TableCell>\r\n                <TableCell padding=\"none\">{name}</TableCell>\r\n                <TableCell padding=\"none\">{rewards[name][0]}</TableCell>\r\n                <TableCell padding=\"none\">{rewards[name][1]}</TableCell>\r\n                <TableCell>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={e => removeReward(name)}>Del</Button>\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell padding=\"none\">\r\n                            <Switch disabled/>\r\n                        </TableCell>\r\n                        {headers.map(h => (<TableCell padding=\"none\" align=\"center\" key={h}>{h}</TableCell>))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rewardList}\r\n                    <TableRow>\r\n                        <TableCell padding=\"none\"/>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Name\" variant=\"outlined\" size=\"small\"\r\n                                              required {...bindRaddN}/></TableCell>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Prob\" variant=\"outlined\" size=\"small\"\r\n                                              required {...bindRaddP}/></TableCell>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Value\" variant=\"outlined\" size=\"small\"\r\n                                              required {...bindRaddV}/></TableCell>\r\n                        <TableCell size=\"small\"><Button variant=\"contained\" color=\"primary\"\r\n                                           onClick={addReward}>Add</Button></TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nfunction ProfileSelect(rewards, setRewards) {\r\n    const defaultProfiles = {\r\n        \"Limited-3\": {\r\n            'Focus-1': [0.004, 30, true],\r\n            'Focus-2': [0.004, 20, true],\r\n            'Focus-3': [0.004, 10, true],\r\n            'Perm': [0.018, 2, true]\r\n        },\r\n        \"Limited-2\": {\r\n            'Focus-1': [0.004, 30, true],\r\n            'Focus-2': [0.004, 10, true],\r\n            'Perm': [0.022, 2, true]\r\n        },\r\n        \"Limited-1\": {\r\n            'Focus-1': [0.0075, 30, true],\r\n            'Perm': [0.0225, 2, true]\r\n        },\r\n        \"Cinfes-2\": {\r\n            'Focus-1': [0.005, 30, true],\r\n            'Focus-2': [0.005, 20, true],\r\n            'Fes-Type': [0.00375, 15, true],\r\n            'Fes-Other': [0.00375, 15, true],\r\n            'Perm': [0.0425, 2, true]\r\n        },\r\n        \"Cinfes-1\": {\r\n            'Focus-1': [0.0075, 30, true],\r\n            'Fes-Type': [0.00375, 15, true],\r\n            'Fes-Other': [0.00375, 15, true],\r\n            'Perm': [0.045, 2, true]\r\n        },\r\n        \"Empty\":{\r\n\r\n        }\r\n    };\r\n    let localProfiles = localStorage.getItem(\"profiles\");\r\n    if (localProfiles===null){\r\n        localProfiles=defaultProfiles;\r\n        localStorage.setItem(\"profiles\",JSON.stringify(localProfiles));\r\n    }else{\r\n        localProfiles=JSON.parse(localProfiles);\r\n    }\r\n    const [profiles, setProfiles] = useState(localProfiles);\r\n    let defaultSelected=\"\";\r\n    for (let pname in profiles){\r\n        if (!profiles.hasOwnProperty(pname)) continue;\r\n        defaultSelected=pname;\r\n        break;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const {value: profileName, bind: bindProfileName, reset: resetProfileName} = useInput(\"\");\r\n\r\n    const {value: profile, bind: bindProfile} = useInput(defaultSelected);\r\n    const handleLoad = (e) => {\r\n        e.preventDefault();\r\n        if (profile === \"\" || !profiles.hasOwnProperty(profile)) return;\r\n        setRewards(profiles[profile]);\r\n    };\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        if (profile === \"\" || !profiles.hasOwnProperty(profile)) return;\r\n        const newProfiles={...profiles};\r\n        delete newProfiles[profile];\r\n        resetProfileName();\r\n        localStorage.setItem(\"profiles\",JSON.stringify(newProfiles));\r\n        setProfiles(newProfiles);\r\n    };\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleConfirm = (e) => {\r\n        e.preventDefault();\r\n        const newProfiles={...profiles,[profileName]: {...rewards}};\r\n        localStorage.setItem(\"profiles\",JSON.stringify(newProfiles));\r\n        setOpen(false);\r\n        setProfiles(newProfiles);\r\n    };\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let profileList = [];\r\n    for (let name in profiles) {\r\n        if (!profiles.hasOwnProperty(name))\r\n            continue;\r\n        profileList.push(\r\n            <MenuItem key={name} value={name}>{name}</MenuItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <TextField select fullWidth label=\"Select Profile\" {...bindProfile} xs={6}>\r\n                        {profileList}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button variant=\"contained\" fullWidth onClick={handleLoad}>Load</Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button margin=\"normal\" variant=\"contained\" fullWidth color=\"secondary\" onClick={handleDelete}>Delete</Button>\r\n                </Grid>\r\n                    <Grid item xs={4}>\r\n                        <Button margin=\"normal\" variant=\"contained\" fullWidth color=\"primary\" onClick={handleSave}>Save</Button>\r\n                    </Grid>\r\n            </Grid>\r\n            {\r\n                NameInputDialog(\"Enter the name for current gacha profile to save(override if exists):\",\r\n                \"Save Profile\",\r\n                open,\r\n                handleCancel,\r\n                handleConfirm,\r\n                bindProfileName)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RefValueTable(pulls,rewards){\r\n    let defaultRefValues=localStorage.getItem(\"refValues\");\r\n    if (defaultRefValues===null){\r\n        defaultRefValues=[];\r\n        localStorage.setItem(\"refValues\",JSON.stringify([]));\r\n    }else{\r\n        defaultRefValues=JSON.parse(defaultRefValues);\r\n    }\r\n    const [refValues,setRefValues]=useState(defaultRefValues);\r\n\r\n    const removeRefValue = (name) => {\r\n        let newVal = refValues.filter(x=>x[0]!==name);\r\n        localStorage.setItem(\"refValues\",JSON.stringify(newVal));\r\n        setRefValues(newVal);\r\n    };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const {value: refValueName, bind: bindRefValueName} = useInput(\"\");\r\n    const [selectedRefValue,setSelectedRefValue]=useState([]);\r\n    const handleAdd=(refValue)=>{\r\n        setSelectedRefValue(refValue);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCancel=()=>{\r\n        setOpen(false);\r\n    };\r\n\r\n    const addRefValue = () => {\r\n        let newVal = refValues.filter(x=>x[0]!==refValueName);\r\n        newVal.push([refValueName,selectedRefValue[1]]);\r\n        localStorage.setItem(\"refValues\",JSON.stringify(newVal));\r\n        setRefValues(newVal);\r\n        setOpen(false);\r\n    };\r\n\r\n    let pullsToSpark=300-pulls;\r\n    let valueSpark=(calc_gacha_value(pullsToSpark, rewards) + calc_spark_value(pullsToSpark, rewards)) / pullsToSpark;\r\n    let value10=calc_gacha_value(10,rewards) / 10;\r\n    let refValueRows = [];\r\n    for (let rv of [...refValues,[\"10 Pulls\",value10,true],[pullsToSpark+\" Pulls\",valueSpark,true]].sort((a,b)=>b[1]-a[1])) {\r\n        refValueRows.push(\r\n            <TableRow key={rv[0]}>\r\n                <TableCell style={rv[2]?{background:\"LightGreen\"}:{background:\"white\"}}>{rv[0]}</TableCell>\r\n                <TableCell>{Math.round(rv[1]*100000)/100000}</TableCell>\r\n                <TableCell>\r\n                    {\r\n                        rv[2]\r\n                            ? <Button variant=\"outlined\" color=\"primary\" onClick={e => handleAdd(rv)}>Add</Button>\r\n                            : <Button variant=\"outlined\" color=\"secondary\" onClick={e => removeRefValue(rv[0])}>Del</Button>\r\n                    }\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Ref Name</TableCell>\r\n                        <TableCell>Value per pull</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {refValueRows}\r\n                </TableBody>\r\n            </Table>\r\n            {\r\n                NameInputDialog(\"Save current ref value as:\",\r\n                    \"Save Ref Value\",\r\n                    open,\r\n                    handleCancel,\r\n                    addRefValue,\r\n                    bindRefValueName)\r\n            }\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport function GachaTool(setTitle) {\r\n    const [rewards, setRewards] = useState({});\r\n    const {value: pulls, bind: bindPulls} = useInput(0);\r\n    const spark_value = calc_spark_value(300 - pulls, rewards);\r\n    useEffect(()=>{\r\n        setTitle(\"Gacha Tool\")\r\n    });\r\n    return (\r\n        <div>\r\n            <Grid container spacing={3}>\r\n                {/* Chart */}\r\n                <Grid container item xs={12} md={4} lg={3}>\r\n                    <Paper>\r\n                        <TextField autoFocus margin=\"normal\" label=\"Pulls Done\" variant=\"outlined\" required {...bindPulls}/>\r\n                        {\r\n                            ProfileSelect(rewards, setRewards)\r\n                        }\r\n                        <Typography variant=\"subtitle1\">Estimated spark value: {spark_value}</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Deposits */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper>\r\n                        {\r\n                            RefValueTable(pulls,rewards)\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Orders */}\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                RewardTable(rewards, setRewards, ['Reward', 'Prob', 'Value', 'Action'])\r\n            }\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link as RouterLink\r\n} from \"react-router-dom\";\r\n\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport {GachaTool} from \"./GachaTool\";\r\nimport {HomePage} from \"./HomePage\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nexport default function App() {\r\n    const [title,setTitle]=React.useState(\"GloriousDawn\");\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        GloriousDawn\r\n                    </Typography>\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={346} max={999} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem component={RouterLink} to=\"/\">\r\n                        <ListItemIcon>\r\n                            <HomeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Home\" />\r\n                    </ListItem>\r\n                    <ListItem component={RouterLink} to=\"/gacha\">\r\n                        <ListItemIcon>\r\n                            <StarIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Gacha\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Switch>\r\n                            <Route path=\"/gacha\">\r\n                                {\r\n                                    GachaTool(setTitle)\r\n                                }\r\n                            </Route>\r\n                            <Route path='/' exact>\r\n                                {\r\n                                    HomePage(setTitle)\r\n                                }\r\n                            </Route>\r\n                        </Switch>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n        </Router>\r\n    );\r\n}","import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React, {useEffect} from \"react\";\r\n\r\nexport function HomePage(setTitle) {\r\n    useEffect(()=>{\r\n        setTitle(\"Home\")\r\n    });\r\n    return(\r\n        <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper>\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper>\r\n                </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n                <Paper>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}