{"version":3,"sources":["PageFrame.js","GachaToolPage.js","HomePage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","PageFrame","children","classes","React","useState","open","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","component","variant","noWrap","Badge","badgeContent","max","Drawer","Divider","List","ListItem","RouterLink","to","ListItemIcon","ListItemText","primary","Container","maxWidth","bionomial_cdf","X","N","P","LogGamma","Z","S","Math","log","Betinc","A","B","C9","A0","B0","A1","B1","M9","A2","abs","bincdf","BT","floor","exp","calc_gacha_value","n","rewards","value","name","hasOwnProperty","r","calc_spark_value","vals","v","push","sort","a","b","prob","forEach","x","fail","useInput","initialValue","setValue","reset","bind","onChange","event","target","NameInputDialog","description","handleCancel","handleConfirm","bindName","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","DialogActions","Button","RewardTable","setRewards","headers","raddN","bindRaddN","resetRaddN","raddP","bindRaddP","resetRaddP","raddV","bindRaddV","resetRaddV","handleSwitch","e","val","checked","rewardList","TableRow","key","TableCell","Switch","newVal","removeReward","TableContainer","Paper","Table","TableHead","disabled","map","h","align","TableBody","size","required","preventDefault","Number","RefValueTable","pulls","defaultRefValues","localStorage","getItem","setItem","JSON","stringify","parse","refValues","setRefValues","refValueName","bindRefValueName","selectedRefValue","setSelectedRefValue","pullsToSpark","valueSpark","value10","refValueRows","rv","style","background","round","filter","removeRefValue","GachaToolPage","bindPulls","spark_value","Grid","item","xs","md","lg","localProfiles","profiles","setProfiles","defaultSelected","pname","profileName","bindProfileName","resetProfileName","profile","bindProfile","profileList","MenuItem","select","newProfiles","ProfileSelect","HomePage","App","path","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f28bba37.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Link as RouterLink\r\n} from \"react-router-dom\";\r\n\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        // backgroundImage: 'url(\"https://embed.pixiv.net/decorate.php?illust_id=60385957\")',\r\n        // background: 'no-repeat;',\r\n        // backgroundSize: 'cover',\r\n        // backgroundPosition: 'center',\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nexport default function PageFrame({title,children}) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                            {title}\r\n                        </Typography>\r\n                        <IconButton color=\"inherit\">\r\n                            <Badge badgeContent={346} max={999} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    variant=\"permanent\"\r\n                    classes={{\r\n                        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                    }}\r\n                    open={open}\r\n                >\r\n                    <div className={classes.toolbarIcon}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        <ListItem component={RouterLink} to=\"/\">\r\n                            <ListItemIcon>\r\n                                <HomeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Home\" />\r\n                        </ListItem>\r\n                        <ListItem component={RouterLink} to=\"/gacha\">\r\n                            <ListItemIcon>\r\n                                <StarIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Gacha\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </Drawer>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer} />\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        {children}\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PageFrame from \"./PageFrame\";\r\n\r\n// Credit: https://www.math.ucla.edu/~tom/distributions/binomial.html\r\nfunction bionomial_cdf(X, N, P) {\r\n    function LogGamma(Z) {\r\n        let S = 1 + 76.18009173 / Z - 86.50532033 / (Z + 1) + 24.01409822 / (Z + 2) - 1.231739516 / (Z + 3) + .00120858003 / (Z + 4) - .00000536382 / (Z + 5);\r\n        let LG = (Z - .5) * Math.log(Z + 4.5) - (Z + 4.5) + Math.log(S * 2.50662827465);\r\n        return LG;\r\n    }\r\n\r\n    function Betinc(X, A, B) {\r\n        let A0 = 0;\r\n        let B0 = 1;\r\n        let A1 = 1;\r\n        let B1 = 1;\r\n        let M9 = 0;\r\n        let A2 = 0;\r\n        let C9;\r\n        while (Math.abs((A1 - A2) / A1) > .00001) {\r\n            A2 = A1;\r\n            C9 = -(A + M9) * (A + B + M9) * X / (A + 2 * M9) / (A + 2 * M9 + 1);\r\n            A0 = A1 + C9 * A0;\r\n            B0 = B1 + C9 * B0;\r\n            M9 = M9 + 1;\r\n            C9 = M9 * (B - M9) * X / (A + 2 * M9 - 1) / (A + 2 * M9);\r\n            A1 = A0 + C9 * A1;\r\n            B1 = B0 + C9 * B1;\r\n            A0 = A0 / B1;\r\n            B0 = B0 / B1;\r\n            A1 = A1 / B1;\r\n            B1 = 1;\r\n        }\r\n        return A1 / A;\r\n    }\r\n\r\n    let bincdf;\r\n    let Z, A, B, S, BT, Betacdf;\r\n    if (N <= 0) {\r\n        return 0;\r\n    } else if ((P < 0) || (P > 1)) {\r\n        return 0;\r\n    } else if (X < 0) {\r\n        bincdf = 0\r\n    } else if (X >= N) {\r\n        bincdf = 1\r\n    } else {\r\n        X = Math.floor(X);\r\n        Z = P;\r\n        A = X + 1;\r\n        B = N - X;\r\n        S = A + B;\r\n        BT = Math.exp(LogGamma(S) - LogGamma(B) - LogGamma(A) + A * Math.log(Z) + B * Math.log(1 - Z));\r\n        if (Z < (A + 1) / (S + 2)) {\r\n            Betacdf = BT * Betinc(Z, A, B)\r\n        } else {\r\n            Betacdf = 1 - BT * Betinc(1 - Z, B, A)\r\n        }\r\n        bincdf = 1 - Betacdf;\r\n    }\r\n    return bincdf;\r\n}\r\n\r\n// restrictions: sum of probability <=1\r\n// m: reward array, [reward, probability, value], sum(probability)<=1\r\n// b: bonus array, [tries, value]\r\n// n: num of tries\r\n// c: cost of each try\r\n// returns: value / cost\r\nfunction calc_gacha_value(n, rewards) {\r\n    let value = 0;\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        let r = rewards[name];\r\n        // Disabled reward\r\n        if (r[2] === false) continue;\r\n        let prob_get = 1 - bionomial_cdf(0, n, r[0]);\r\n        value += prob_get * r[1];\r\n    }\r\n    return value;\r\n}\r\n\r\n\r\nfunction calc_spark_value(n, rewards) {\r\n    let vals = [];\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        let v = rewards[name];\r\n        vals.push([(v[2] ? v[1] : 0), v[0]]);\r\n    }\r\n    vals.sort((a, b) => b[0] - a[0]);\r\n    let value = 0;\r\n    let prob = 1;\r\n    vals.forEach(x => {\r\n        let fail = bionomial_cdf(0, n, x[1]);\r\n        value += prob * fail * x[0];\r\n        prob *= (1 - fail);\r\n    });\r\n    return value;\r\n}\r\n\r\nconst useInput = initialValue => {\r\n    const [value, setValue] = useState(initialValue);\r\n    return {\r\n        value,\r\n        setValue,\r\n        reset: () => setValue(\"\"),\r\n        bind: {\r\n            value,\r\n            onChange: event => {\r\n                setValue(event.target.value);\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nfunction NameInputDialog(description, title, open, handleCancel, handleConfirm, bindName) {\r\n    return (\r\n        <Dialog open={open} onClose={handleCancel} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Save Profile</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {description}\r\n                </DialogContentText>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"profileName\"\r\n                    label=\"Profile Name\"\r\n                    fullWidth\r\n                    {...bindName}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleConfirm} color=\"primary\">\r\n                    Confirm\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>);\r\n}\r\n\r\nfunction RewardTable(rewards, setRewards, headers) {\r\n    const {value: raddN, bind: bindRaddN, reset: resetRaddN} = useInput('');\r\n    const {value: raddP, bind: bindRaddP, reset: resetRaddP} = useInput('');\r\n    const {value: raddV, bind: bindRaddV, reset: resetRaddV} = useInput('');\r\n    const addReward = (e) => {\r\n        e.preventDefault();\r\n        setRewards({...rewards, [raddN]: [Number(raddP), Number(raddV), true]});\r\n        resetRaddN();\r\n        resetRaddP();\r\n        resetRaddV();\r\n    };\r\n    const handleSwitch = (e) => {\r\n        const name = e.target.name;\r\n        let val = [...rewards[name]];\r\n        val[2] = e.target.checked;\r\n        setRewards({...rewards, [name]: val});\r\n    };\r\n    const removeReward = (name) => {\r\n        let newVal = {...rewards};\r\n        delete newVal[name];\r\n        setRewards(newVal);\r\n    };\r\n    let rewardList = [];\r\n    for (let name in rewards) {\r\n        if (!rewards.hasOwnProperty(name))\r\n            continue;\r\n        rewardList.push(\r\n            <TableRow key={name}>\r\n                <TableCell padding=\"none\">\r\n                    <Switch color=\"primary\" checked={rewards[name][2]} name={name} onChange={handleSwitch}/>\r\n                </TableCell>\r\n                <TableCell padding=\"none\">{name}</TableCell>\r\n                <TableCell padding=\"none\">{rewards[name][0]}</TableCell>\r\n                <TableCell padding=\"none\">{rewards[name][1]}</TableCell>\r\n                <TableCell>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={e => removeReward(name)}>Del</Button>\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell padding=\"none\">\r\n                            <Switch disabled/>\r\n                        </TableCell>\r\n                        {headers.map(h => (<TableCell padding=\"none\" align=\"center\" key={h}>{h}</TableCell>))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rewardList}\r\n                    <TableRow>\r\n                        <TableCell padding=\"none\"/>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Name\" variant=\"outlined\"\r\n                                                                          size=\"small\"\r\n                                                                          required {...bindRaddN}/></TableCell>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Prob\" variant=\"outlined\"\r\n                                                                          size=\"small\"\r\n                                                                          required {...bindRaddP}/></TableCell>\r\n                        <TableCell padding=\"none\" size=\"small\"><TextField fullWidth label=\"Value\" variant=\"outlined\"\r\n                                                                          size=\"small\"\r\n                                                                          required {...bindRaddV}/></TableCell>\r\n                        <TableCell size=\"small\"><Button variant=\"contained\" color=\"primary\"\r\n                                                        onClick={addReward}>Add</Button></TableCell>\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n\r\nfunction ProfileSelect(rewards, setRewards) {\r\n    const defaultProfiles = {\r\n        \"Limited-3\": {\r\n            'Focus-1': [0.004, 30, true],\r\n            'Focus-2': [0.004, 20, true],\r\n            'Focus-3': [0.004, 10, true],\r\n            'Perm': [0.018, 2, true]\r\n        },\r\n        \"Limited-2\": {\r\n            'Focus-1': [0.004, 30, true],\r\n            'Focus-2': [0.004, 10, true],\r\n            'Perm': [0.022, 2, true]\r\n        },\r\n        \"Limited-1\": {\r\n            'Focus-1': [0.0075, 30, true],\r\n            'Perm': [0.0225, 2, true]\r\n        },\r\n        \"Cinfes-2\": {\r\n            'Focus-1': [0.005, 20, true],\r\n            'Focus-2': [0.005, 15, true],\r\n            'Fes-Type': [0.00375, 15, true],\r\n            'Fes-Other': [0.00375, 15, true],\r\n            'Perm': [0.0425, 2, true],\r\n            'Fes-Spark': [0, 30, true]\r\n        },\r\n        \"Cinfes-1\": {\r\n            'Focus-1': [0.0075, 20, true],\r\n            'Fes-Type': [0.00375, 15, true],\r\n            'Fes-Other': [0.00375, 15, true],\r\n            'Perm': [0.045, 2, true],\r\n            'Fes-Spark': [0, 30, true]\r\n        },\r\n        \"Empty\": {}\r\n    };\r\n    let localProfiles = localStorage.getItem(\"profiles\");\r\n    if (localProfiles === null) {\r\n        localProfiles = defaultProfiles;\r\n        localStorage.setItem(\"profiles\", JSON.stringify(localProfiles));\r\n    } else {\r\n        localProfiles = JSON.parse(localProfiles);\r\n    }\r\n    const [profiles, setProfiles] = useState(localProfiles);\r\n    let defaultSelected = \"\";\r\n    for (let pname in profiles) {\r\n        if (!profiles.hasOwnProperty(pname)) continue;\r\n        defaultSelected = pname;\r\n        break;\r\n    }\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const {value: profileName, bind: bindProfileName, reset: resetProfileName} = useInput(\"\");\r\n\r\n    const {value: profile, bind: bindProfile} = useInput(defaultSelected);\r\n    const handleLoad = (e) => {\r\n        e.preventDefault();\r\n        if (profile === \"\" || !profiles.hasOwnProperty(profile)) return;\r\n        setRewards(profiles[profile]);\r\n    };\r\n    const handleDelete = (e) => {\r\n        e.preventDefault();\r\n        if (profile === \"\" || !profiles.hasOwnProperty(profile)) return;\r\n        const newProfiles = {...profiles};\r\n        delete newProfiles[profile];\r\n        resetProfileName();\r\n        localStorage.setItem(\"profiles\", JSON.stringify(newProfiles));\r\n        setProfiles(newProfiles);\r\n    };\r\n    const handleSave = (e) => {\r\n        e.preventDefault();\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleConfirm = (e) => {\r\n        e.preventDefault();\r\n        const newProfiles = {...profiles, [profileName]: {...rewards}};\r\n        localStorage.setItem(\"profiles\", JSON.stringify(newProfiles));\r\n        setOpen(false);\r\n        setProfiles(newProfiles);\r\n    };\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let profileList = [];\r\n    for (let name in profiles) {\r\n        if (!profiles.hasOwnProperty(name))\r\n            continue;\r\n        profileList.push(\r\n            <MenuItem key={name} value={name}>{name}</MenuItem>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <TextField select fullWidth label=\"Select Profile\" {...bindProfile} xs={6}>\r\n                        {profileList}\r\n                    </TextField>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button variant=\"contained\" fullWidth onClick={handleLoad}>Load</Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button margin=\"normal\" variant=\"contained\" fullWidth color=\"secondary\"\r\n                            onClick={handleDelete}>Delete</Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Button margin=\"normal\" variant=\"contained\" fullWidth color=\"primary\"\r\n                            onClick={handleSave}>Save</Button>\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n                NameInputDialog(\"Enter the name for current gacha profile to save(override if exists):\",\r\n                    \"Save Profile\",\r\n                    open,\r\n                    handleCancel,\r\n                    handleConfirm,\r\n                    bindProfileName)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RefValueTable(pulls, rewards) {\r\n    let defaultRefValues = localStorage.getItem(\"refValues\");\r\n    if (defaultRefValues === null) {\r\n        defaultRefValues = [];\r\n        localStorage.setItem(\"refValues\", JSON.stringify([]));\r\n    } else {\r\n        defaultRefValues = JSON.parse(defaultRefValues);\r\n    }\r\n    const [refValues, setRefValues] = useState(defaultRefValues);\r\n\r\n    const removeRefValue = (name) => {\r\n        let newVal = refValues.filter(x => x[0] !== name);\r\n        localStorage.setItem(\"refValues\", JSON.stringify(newVal));\r\n        setRefValues(newVal);\r\n    };\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const {value: refValueName, bind: bindRefValueName} = useInput(\"\");\r\n    const [selectedRefValue, setSelectedRefValue] = useState([]);\r\n    const handleAdd = (refValue) => {\r\n        setSelectedRefValue(refValue);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const addRefValue = () => {\r\n        let newVal = refValues.filter(x => x[0] !== refValueName);\r\n        newVal.push([refValueName, selectedRefValue[1]]);\r\n        localStorage.setItem(\"refValues\", JSON.stringify(newVal));\r\n        setRefValues(newVal);\r\n        setOpen(false);\r\n    };\r\n\r\n    let pullsToSpark = 300 - pulls;\r\n    let valueSpark = (calc_gacha_value(pullsToSpark, rewards) + calc_spark_value(pullsToSpark, rewards)) / pullsToSpark;\r\n    let value10 = calc_gacha_value(10, rewards) / 10;\r\n    let refValueRows = [];\r\n    for (let rv of [...refValues, [\"10 Pulls\", value10, true], [pullsToSpark + \" Pulls\", valueSpark, true]].sort((a, b) => b[1] - a[1])) {\r\n        refValueRows.push(\r\n            <TableRow key={rv[0]}>\r\n                <TableCell style={rv[2] ? {background: \"LightGreen\"} : {background: \"white\"}}>{rv[0]}</TableCell>\r\n                <TableCell>{Math.round(rv[1] * 100000) / 100000}</TableCell>\r\n                <TableCell>\r\n                    {\r\n                        rv[2]\r\n                            ? <Button variant=\"outlined\" color=\"primary\" onClick={e => handleAdd(rv)}>Pin</Button>\r\n                            : <Button variant=\"outlined\" color=\"secondary\"\r\n                                      onClick={e => removeRefValue(rv[0])}>Del</Button>\r\n                    }\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Ref Name</TableCell>\r\n                        <TableCell>Value per pull</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {refValueRows}\r\n                </TableBody>\r\n            </Table>\r\n            {\r\n                NameInputDialog(\"Save current ref value as:\",\r\n                    \"Save Ref Value\",\r\n                    open,\r\n                    handleCancel,\r\n                    addRefValue,\r\n                    bindRefValueName)\r\n            }\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport function GachaToolPage() {\r\n    const [rewards, setRewards] = useState({});\r\n    const {value: pulls, bind: bindPulls} = useInput(0);\r\n    const spark_value = calc_spark_value(300 - pulls, rewards);\r\n    return (\r\n        <PageFrame title=\"Gacha Tool\">\r\n            <Grid container spacing={3}>\r\n                <Grid container item xs={12} md={4} lg={3}>\r\n                    <Paper>\r\n                        <TextField autoFocus margin=\"normal\" label=\"Pulls Done\" variant=\"outlined\"\r\n                                   required {...bindPulls}/>\r\n                        {\r\n                            ProfileSelect(rewards, setRewards)\r\n                        }\r\n                        <Typography variant=\"subtitle1\">Estimated spark value: {spark_value}</Typography>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper>\r\n                        {\r\n                            RefValueTable(pulls, rewards)\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                        {\r\n                            RewardTable(rewards, setRewards, ['Reward', 'Prob', 'Value', 'Action'])\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </PageFrame>\r\n    );\r\n}","import Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport PageFrame from \"./PageFrame\";\r\n\r\nexport function HomePage() {\r\n    return (\r\n        <PageFrame title=\"Glorious Dawn's Home\">\r\n            <Grid container spacing={3}>\r\n                {/* Chart */}\r\n                <Grid item xs={12} md={8} lg={9}>\r\n                    <Paper>\r\n                        <List>\r\n                            <ListItem component=\"h2\" variant=\"h6\" color=\"inherit\" noWrap>\r\n                                Available tools:\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem component={RouterLink} to=\"/gacha\">\r\n                                <ListItemIcon>\r\n                                    <StarIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Gacha\"/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Deposits */}\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Recent Orders */}\r\n                <Grid item xs={12}>\r\n                    <Paper>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </PageFrame>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport {GachaToolPage} from \"./GachaToolPage\";\r\nimport {HomePage} from \"./HomePage\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/gacha\">\r\n                    <GachaToolPage/>\r\n                </Route>\r\n                <Route path='/' exact>\r\n                    <HomePage/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}